
//パスの設定
path = "C:\github\grablu"

//オプション設定
OPTION LOGPATH= "C:\github\grablu\log\niku.txt"
OPTION LOGFILE= 3 //1:出力しない、2:日付を付けない、3:秒も付ける、4:以前のログは消去

//ライブラリ呼び出し
CALL path + "Library\ChkImgX\ChkImgX.uws"　//CHKIMGX関数を別ファイルから呼び出しておく。

CALL path + "Library\PUSH_BUTTON.uws"      //
CALL path + "Library\APandFRIEND.uws"      //
CALL path + "Library\CHECK_BUTONN.uws"     //
CALL path + "Library\AFTER.uws"            //
CALL path + "Library\CHECK_BUTONNv2.uws"   //
CALL path + BATTLE_EX+.uws                 //

CALL path + "Library\ERROR\BEEP.uws"       //
CALL path + "Library\ERROR\ERORR.uws"      //
CALL path + "Library\ERROR\MAIL.uws"       //
CALL path + "Library\ERROR\SCREENSHOT.uws" //

startup_chkimgx() //CHKIMGX関数開始


//======================================================================================
//共通変数 
//======================================================================================

//配列の内容
//message         ：ログに出力するメッセージ
//path_image      ：判定に利用する画像ファイルのパス（フルパス）
//size（x1,y1）   ：ボタンのサイズ（クリック可能な範囲）
//range（x2,y2）  ：画像検索を行う範囲の左上の座標
//range(x3,y3）   ：画像検索を行う範囲の右下の座標
//trg num         ：検索範囲に存在する複数対象のうち、何個目の座標かを指定（1:左上から1つ目の対象、2:左上から2つ目の対象）
//loop cnt        ：画像検索を行う回数（10：10回検索を行い、見つからなければ諦める。検索の間は0.1秒空く）
//sleep(min,max） ：画像をクリックした後にスリープを行う最小秒数と最大秒数を指定。（実際は最小秒数と最大秒数の合間のランダムな時間）
//                 スリープは0を指定しても、最低1秒実施される。そのため、1秒+何秒スリープを実施するかを指定することになる。
//check flg       ：ボタンをクリックした後、画像を再検索して画面上に画像がないことを確認する。
//                  画像が残っていた場合は再度クリックする。


	//==================================================================================
	//OKボタン
	//==================================================================================
	
		p_ok                 = image_path + "ok1.BMP"
		p_ok1                = image_path + "ok1.BMP"    //フレンド選択後のOKボタン
		p_ok2                = image_path + "ok2.BMP"    //半汁選択後のOKボタン
		p_ok3                = image_path + "ok3.BMP"    //戦闘終了後のOKボタン

		
	  //                                                       |  size  |       range       | trg|  loop|    sleep  | check| 補足
	  //dim _btn             = "メッセージ",   p_image,        |  x1, y1|  x2,  y2,  x3,  y3| num|   cnt|   min, max|  flg |
		dim ok_[]            = "ok",            p_ok,            200, 35, 150, 650, 500, 800,   1,    30,     1,   3,   1    //未使用
		dim ok_1[]           = "ok",            p_ok1,           210, 35,   0, 850, 650, 950,   1,    30,     1,   3,   1    //
		dim ok_2[]           = "ok",            p_ok2,           200, 30, 180, 650, 500, 800,   1,    30,     1,   2,   1    //
		dim ok_3[]           = "ok",            p_ok3,           203, 30, 150, 600, 500, 900,   1,   600,     1,   3,   1    //
		dim ok_4[]           = "ok",            p_ok3,           203, 30, 150, 600, 500, 900,   1,    30,     0,   2,   1    //
		dim ok_5[]           = "ok",            p_ok3,           203, 30, 300, 600, 600, 700,   1,    30,     1,   3,   1    //
		dim ok_6[]           = "ok",            p_ok3,           203, 30, 300, 650, 600, 750,   1,    30,     1,   3,   1    //
		dim ok_6[]           = "ok",            p_ok3,           203, 30, 300, 650, 600, 750,   1,     5,     0,   1,   1    //


	//==================================================================================
	//その他共通
	//==================================================================================
		path_friend          = image_path + "friend.BMP"
		path_use             = image_path + "use.BMP"
		path_one_more        = image_path + "one_more.BMP"
		path_classup         = image_path + "classup.BMP"
		path_close           = image_path + "close.BMP"
	  //                                                              |  size  |       range       | trg|  loop|    sleep  | check|
	  //dim _btn             ="メッセージ",            path_image,    |  x1, y1|  x2,  y2,  x3,  y3| num|   cnt|   min, max|  flg |
		dim friend[]         ="Friend選択",            path_friend ,    100,117,   0, 400, 600, 700,   1,    30,     0,   2,   0
		dim friend2[]        ="Friend選択",            path_friend ,    100,117,   0, 400, 600, 700,   1,    30,     0,   2,   1
		dim use[]            = "使用する",             path_use,        141, 36, 350, 700, 600, 850,   1,    10,     0,   2,   1
		dim more[]           ="もう一度",              path_one_more ,  199, 35,   0, 900, 400,1000,   1,    30,     0,   2,   1
		dim classup[]        = "Classup",              path_classup,    120,200, 100, 650, 550, 750,   1,    15,     0,   1,   1
		dim close[]          = "close",                path_close,      120,200, 100, 650, 550, 750,   1,    15,     0,   1,   1


	//==================================================================================
	//戦闘画面
	//==================================================================================
		p_full               = image_path + "full_b.BMP"
		p_kyuen              = image_path + "kyuen.BMP"
		p_call_kyuen         = image_path + "call_kyuen.BMP"
		p_attack             = image_path + ""

	  //                                                              |  size  |       range       | trg|  loop|    sleep  | check|
	  //dim _btn             ="メッセージ",            p_image,       |  x1, y1|  x2,  y2,  x3,  y3| num|   cnt|   min, max|  flg |
		dim full[]           ="full ボタン",           p_full,           93, 22,   0, 550, 150, 650,   1,    80,     1,  10,   1
		dim kyuen_b[]        ="救援",                  p_kyuen,         219, 22,   0, 750, 300, 800,   1,    15,     0,   1,   1
		dim call_kyuen[]     ="救援依頼",              p_call_kyuen,    167, 35, 300, 700, 600, 800,   1,    15,     0,   1,   1
		dim attack[]         ="攻撃ボタン",            p_attack,        167, 35, 300, 700, 600, 800,   1,    15,     0,   1,   1


//==================================================================================
//イベント関連
//==================================================================================

	//==============================================================================
	//イベント共通
	//==============================================================================
		p_reward             = image_path + "reward.BMP"
		p_2top_ev            = image_path + "2top_ev.BMP"
		p_2top_extr          = image_path + "2top_extr.BMP"
			
	  //                                                              |  size  |       range       | trg|  loop|    sleep  | check|
	  //dim _btn             = "メッセージ",           path_image,    |  x1, y1|  x2,  y2,  x3,  y3| num|   cnt|   min, max|  flg |
		dim reward[]         = "報酬を獲得",           p_reward,        210, 35, 300, 800, 650, 950,   1,    15,     0,   2,   1

//設定値未修整
		dim 2top_ev[]        = "トップ画面へ",         p_2top_ev,       210, 35, 300, 800, 650, 950,   1,    15,     0,   2,   1    //イベントTOP画面へ
		dim 2top_extr[]      = "エキストラTOP画面へ",  p_2top_extr,     210, 35, 300, 800, 650, 950,   1,    15,     0,   2,   1    //エクストラTOP画面へ
		dim multi[]          = "マルチバトル",         p_multi,         210, 35, 300, 800, 650, 950,   1,    15,     0,   2,   1    //マルチバトル選択


	//==============================================================================
	//古戦場
	//==============================================================================
		p_bf_multi           = image_path + "bf_multi.BMP"
		p_bf_trg_vh          = image_path + "bf_trg_vh.BMP"
		p_bf_trg_ex          = image_path + "bf_trg_ex.BMP"
		p_bf_trg_exp         = image_path + "bf_trg_expls.BMP"

		dim bf_multi[]       = "マルチバトル",         p_multi,         210, 35, 300, 800, 650, 950,   1,    15,     0,   2,   1    //マルチバトル選択
		dim bf_trg_vh[]      = "VH難易度選択",         p_extr_trg_vh,   210, 35, 300, 800, 650, 950,   1,    15,     0,   2,   1    //難易度VH選択
		dim bf_trg_ex[]      = "EX難易度選択",         p_extr_trg_ex,   210, 35, 300, 800, 650, 950,   1,    15,     0,   2,   1    //難易度EX選択
		dim bf_trg_exp[]     = "EX+難易度選択",        p_extr_trg_exp,  210, 35, 300, 800, 650, 950,   1,    15,     0,   2,   1    //難易度EX+選択


	//==============================================================================
	//ストーリー
	//==============================================================================
	
	
//		p_extr_trg_vh        = image_path + "trg_vh.BMP"
//		p_extr_trg_ex        = image_path + "trg_ex.BMP"
//		p_extr_trg_exp       = image_path + "trg_expls.BMP"


//		dim extr_trg_vh[]    = "VH難易度選択",         p_extr_trg_vh,   210, 35, 300, 800, 650, 950,   1,    15,     0,   2,   1    //エキストラバトルの難易度VH選択
//		dim extr_trg_ex[]    = "EX難易度選択",         p_extr_trg_ex,   210, 35, 300, 800, 650, 950,   1,    15,     0,   2,   1    //エキストラバトルの難易度EX選択
//		dim extr_trg_exp[]   = "EX+難易度選択",        p_extr_trg_exp,  210, 35, 300, 800, 650, 950,   1,    15,     0,   2,   1    //エキストラバトルの難易度EX+選択

//		dim ex_tar_vh_btn[]  = "VHを選択",             path_ev_tar_vh,  136,184,   0, 550, 650, 850, 1, 20, 1,  2,1
//		dim ex_tar_hl_btn[]  = "HLを選択",             path_ev_tar_hl,  137,187,   0, 550, 650, 850, 1, 20, 1,  2,1
//		dim ex_tar_ex_btn[]  = "EXを選択",             path_ev_tar_ex,  130,180,   0, 550, 650, 850, 1, 20, 1,  2,1







COUNTER = 1
COUNT = 0
ACW(GETID("グランブルーファンタジー[AndApp版]","Chrome_WidgetWin_1"),10,0,1406,1073,0)

//main
PRINT "実行開始"

	WHILE TRUE	//永久に実行



//------------------------------------------------------
	//APが不足していないかのチェック
	//フレンドを探してクリックする
		RC = APandFRIEND(use,friend,ok_btn_1,ok_btn_2)
		IFB RC = 99
			ERROR_Pattern1("認証の可能性有","フレンド選択でエラー発生")
			EXITEXIT
		ENDIF

//------------------------------------------------------

	//auto(FULL)の確認を探してクリックする
		BATTLE_EX_pls(full,20)
		
		IFB RC = 0
			WHILE CHECK_BUTONN(ok_btn_4) != 0
				SLEEP(1)
			WEND
		ENDIF
		
//-------------------------------------------------------
//戦闘後

	//戦闘後の処理を集約
		AFTER(ok_btn_3,ok_btn_4,more,close)

	//一定回数で休憩を入れる
		IFB (COUNTER = 60) OR (COUNTER = 133) OR (COUNTER = 166)
			SLEEP(365)
		ENDIF


		COUNTER = COUNTER + 1
		PRINT "============================"
		PRINT COUNTER + "週目の処理です"
		PRINT "============================"
	WEND
PRINT "実行完了"



